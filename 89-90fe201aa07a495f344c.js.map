{"version":3,"sources":["webpack:///./config/site/site.config.js","webpack:///./lib/terra-dev-site/tool/terra-dev-site/SiteConfig.b/site.config.a.tool.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"guBAOA,IAKMA,EAAc,GAIL,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,cALS,UAKT,KAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,yBAAK,wBAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,szI,mkBA8HTJ,EAAWK,gBAAiB,EC5I5B,IAKMN,EAAc,GAIL,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,cALS,UAKT,KAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,mBAAQ,CACN,GAAM,eADR,eAGA,wSACA,uBAAG,qBAAGC,WAAW,KAAQ,CACrB,KAAQ,kFADT,wBAGH,cAAC,EAAD,CAAQD,QAAQ,YAKpBH,EAAWK,gBAAiB","file":"89-90fe201aa07a495f344c.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const startCase = require('lodash.startcase');\nconst fs = require('fs');\nconst path = require('path');\nconst navConfig = require('./navigation.config');\n\nconst npmPackage = JSON.parse(fs.readFileSync(path.join(process.cwd(), 'package.json')));\n\nconst siteConfig = {\n  /* The navigation configuration. */\n  navConfig,\n\n  /* The path to the pages configuration. If this is enabled, the \\`generatePages\\` configuration will not be used. */\n  pagesConfig: undefined,\n\n  /** These options are used to find the pages to serve via terra-dev-site. If 'pagesConfig' is provided, this\n   * configuration is not used.\n   * The file extensions pulled in are 'md' extensions and any extension defined in the resolve extensions set in the webpack config.\n   *   The search pattern key options:\n   *      root: where the search pattern starts.\n   *      entryPoint: added to the search pattern and is where the of the directory structure\n   *           for menu navigation will begin.\n   *      dist: (option) the directory containing transpiled code to use if hot reloading is enabled and is in prod.\n   *      source: (option) the directory containing source code to use if hot reloading is enabled and not in prod mode.\n   */\n  generatePages: {\n    searchPatterns: [\n      {\n        root: process.cwd(),\n        source: 'src',\n        dist: 'lib',\n        entryPoint: 'terra-dev-site',\n      },\n    ],\n  },\n\n  /** Whether or not hot reloading section should be enabled. This applies to the search searchPatterns\n   * and mono-repo package aliasing. This is enabled by default for dev builds.\n   */\n  hotReloading: true,\n\n  /** The root-level npm package.json file. Change this if you have a non-standard package.json path.\n   * Defaults to the <root_dir>/package.json\n   */\n  npmPackage,\n\n  /* The list of side effect js files. */\n  sideEffectImports: [],\n\n  /* Path to the image to display as page placeholder when a component does not render. */\n  placeholderSrc: path.join(__dirname, '..', '..', 'terra.png'),\n\n  /* The README content to display on the home page. Set to undefined to opt out. */\n  readMeContent: path.resolve(process.cwd(), 'README.md'),\n\n  appConfig: {\n    /* The title the site header should display. */\n    title: startCase(npmPackage.name), // maps to appTitle\n\n    /* Path to the favicon for the site. */\n    favicon: path.join(__dirname, '..', '..', 'terra-favicon', '32px', 'favicon.ico'),\n\n    /** The themes to supply the ThemeProvider which allows the site to switch\n      * between themes. Providing multiple enables the theme utility to display\n      * in the header's toolbar.\n      */\n    themes: {\n      'Default Theme': '',\n    },\n\n    /** The default theme of the site. Note, this value should be a key that was\n     * supplied to the themes object. The open-sourced theme is the default theme.\n     */\n    defaultTheme: 'Default Theme',\n\n    /** The locales to supply Base with, which allows the site to switch\n     * between locales. Defaulted to the supported locals list in terra-18n.\n     *\n     * NOTE: This configuration has been deprecated as of terra-dev-site 6.23.0\n     * locales: i18nSupportedLocales,\n     */\n\n    /* The default locale of the site. 'en' is the default theme. */\n    defaultLocale: 'en',\n\n    /* The default direction of the site. 'ltr' is the default direction. */\n    defaultDirection: 'ltr',\n\n    /** This section allows you to set custom extensions.\n     * Extensions will be launched in a modal manager. All fields are required.\n     *  Add like:\n     *  extensions: [\n     * {\n     *     iconPath: 'terra-icon/lib/icon/IconSend',\n     *     key: 'terra-dev-site.search',\n     *     text: 'text',\n     *     componentPath: '../path/to/component',\n     *     size: 'small',\n     *   },\n     * ],\n     */\n    extensions: [],\n\n    /** This section allows you to inject arbitrary html into the head tag of index.html.\n     *  It takes an array of strings. You could load the string from an external file if desired.\n     *  Add like:\n     *  headHtml:[\n     *    '<script> console.log(\"Terra Dev Site!\") </script>',\n     *  ],\n     */\n    headHtml: [],\n\n  },\n\n  /* The default for whether or not test evidence should be included. 'true' is the default value. */\n  includeTestEvidence: true,\n};\n\nmodule.exports = siteConfig;\n\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport Config from 'terra-dev-site/config/site/site.config?dev-site-codeblock';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"site-config\"\n    }}>{`Site Config`}</h1>\n    <p>{`Site config is the main config for the terra-dev-site. Depending on your repo setup, site config may not be needed. If it is, it must be located in the dev-site-config folder. The site config below is for documentation purposes and may require modifications before use.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/cerner/terra-dev-site/blob/main/config/site/site.config.js\"\n      }}>{`Default site config`}</a></p>\n    <Config mdxType=\"Config\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}