{"version":3,"sources":["webpack:///./lib/terra-dev-site/test/loaders/example.js","webpack:///./lib/terra-dev-site/tool/terra-dev-site/WebpackLoaders.e/CodeblockLoader.b.tool.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ktBAOA,IAKMA,EAAc,GAIL,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,cALS,UAKT,KAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,yBAAK,wBAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,gIAiBTJ,EAAWK,gBAAiB,G,8qBC/B5B,IAKMN,EAAc,GAIL,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,cALS,UAKT,KAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,mBAAQ,CACN,GAAM,oBADR,oBAGA,6MACA,mBAAQ,CACN,GAAM,kBADR,kBAGA,uBAAG,4BAAYC,WAAW,KAAvB,wBACH,mBAAQ,CACN,GAAM,WADR,WAGA,yBAAK,wBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,8EAML,mBAAQ,CACN,GAAM,mBADR,mBAGA,yBAAK,wBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,yIAcL,mBAAQ,CACN,GAAM,sBADR,sBAGA,cAAC,IAAD,CAAWD,QAAQ,eAKvBH,EAAWK,gBAAiB","file":"59-d3affaa882a4a0186484.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react';\n\nconst TagComp = () => (\n  <h1>\n    I am a test\n  </h1>\n);\n\nexport default TagComp;\n\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport Codeblock from '../../../test/loaders/example?dev-site-codeblock'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"codeblock-loader\"\n    }}>{`Codeblock Loader`}</h1>\n    <p>{`The codeblock loader will take the passed in file and return an mdx react component containing a codeblock with the source of the passed in file and a type of the file extension.`}</p>\n    <h2 {...{\n      \"id\": \"resource-query\"\n    }}>{`Resource query`}</h2>\n    <p><inlineCode parentName=\"p\">{`?dev-site-codeblock`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import Codeblock from './example?dev-site-codeblock';\n\n< Codeblock />\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"markdown-output\"\n    }}>{`Markdown output`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`\\`\\`\\`js\nimport React from 'react';\n\nconst TagComp = () => (\n  <h1>\n    I am a test\n  </h1>\n);\n\nexport default TagComp;\n'''\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rendered-codeblock\"\n    }}>{`Rendered codeblock`}</h2>\n    <Codeblock mdxType=\"Codeblock\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}